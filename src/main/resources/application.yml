spring:
  datasource:
    url: jdbc:mysql://DB_URI/DB_NAME
    username: DB_USERNAME
    password: DB_PASSWORD
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: GOOGLE_CLIENT_ID
            client-secret: GOOGLE_CLIENT_SECRET
            redirect-uri: http://localhost:8080/oauth2/callback/google
            scope: email,profile
          facebook:
            client-id: FACEBOOK_CLIENT_ID
            client-secret: FACEBOOK_CLIENT_SECRET
            redirect-uri: http://localhost:8080/oauth2/callback/facebook
            scope: email,public_profile
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=name,email,picture.width(250).height(250)
          google:
            authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
            tokenUri: https://www.googleapis.com/oauth2/v4/token
            userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo

app:
  auth:
    tokenSecret: TOKEN_SECRET
    tokenExpireMs: 864000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    authorizedRedirectUris:
      - http://127.0.0.1:5173/oauth2/redirect
